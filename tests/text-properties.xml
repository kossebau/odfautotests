<?xml version="1.0" encoding="utf-8"?>
<documenttests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.example.org/documenttests" xmlns:anim="urn:oasis:names:tc:opendocument:xmlns:animation:1.0" xmlns:chart="urn:oasis:names:tc:opendocument:xmlns:chart:1.0" xmlns:config="urn:oasis:names:tc:opendocument:xmlns:config:1.0" xmlns:db="urn:oasis:names:tc:opendocument:xmlns:database:1.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:dr3d="urn:oasis:names:tc:opendocument:xmlns:dr3d:1.0" xmlns:draw="urn:oasis:names:tc:opendocument:xmlns:drawing:1.0" xmlns:fo="urn:oasis:names:tc:opendocument:xmlns:xsl-fo-compatible:1.0" xmlns:form="urn:oasis:names:tc:opendocument:xmlns:form:1.0" xmlns:manifest="urn:oasis:names:tc:opendocument:xmlns:manifest:1.0" xmlns:meta="urn:oasis:names:tc:opendocument:xmlns:meta:1.0" xmlns:number="urn:oasis:names:tc:opendocument:xmlns:datastyle:1.0" xmlns:o="urn:oasis:names:tc:opendocument:xmlns:office:1.0" xmlns:odf="http://docs.oasis-open.org/ns/office/1.2/meta/odf#" xmlns:of="urn:oasis:names:tc:opendocument:xmlns:of:1.2" xmlns:presentation="urn:oasis:names:tc:opendocument:xmlns:presentation:1.0" xmlns:s="urn:oasis:names:tc:opendocument:xmlns:style:1.0" xmlns:script="urn:oasis:names:tc:opendocument:xmlns:script:1.0" xmlns:smil="urn:oasis:names:tc:opendocument:xmlns:smil-compatible:1.0" xmlns:svg="urn:oasis:names:tc:opendocument:xmlns:svg-compatible:1.0" xmlns:table="urn:oasis:names:tc:opendocument:xmlns:table:1.0" xmlns:text="urn:oasis:names:tc:opendocument:xmlns:text:1.0" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:t="http://www.example.org/documenttests" xsi:schemaLocation="http://www.example.org/documenttests ../documenttests.xsd">
  <test name="background-color">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties fo:background-color="#339999"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@fo:background-color)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@fo:background-color='#339999'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="background-color-transparent">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties fo:background-color="transparent"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@fo:background-color)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@fo:background-color='transparent'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="color">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties fo:color="#339999"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@fo:color)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@fo:color='#339999'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="country-language">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties fo:country="NL" fo:language="nl"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@fo:country)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@fo:country='NL'"/>
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@fo:language)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@fo:language='nl'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="font-family">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties fo:font-family="Helvetica"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@fo:font-family)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@fo:font-family='Helvetica'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="font-size">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties fo:font-size="6pt"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@fo:font-size)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@fo:font-size='6pt'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="font-style-oblique">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties fo:font-style="oblique"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@fo:font-style)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@fo:font-style='oblique'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="font-style-normal">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties fo:font-style="normal"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@fo:font-style)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@fo:font-style='normal'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="font-variant-small-caps">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties fo:font-variant="small-caps"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@fo:font-variant)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@fo:font-variant='small-caps'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="font-variant-normal">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties fo:font-variant="normal"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@fo:font-variant)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@fo:font-variant='normal'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="font-weight-bold">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties fo:font-weight="bold"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@fo:font-weight)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@fo:font-weight='bold'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="font-weight-100">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties fo:font-weight="100"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@fo:font-weight)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@fo:font-weight='100'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="font-weight-900">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties fo:font-weight="900"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@fo:font-weight)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@fo:font-weight='900'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="hyphenate-true">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties fo:hyphenate="true"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@fo:hyphenate)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@fo:hyphenate='true'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="hyphenate-false">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties fo:hyphenate="false"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@fo:hyphenate)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@fo:hyphenate='false'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="hyphenation-push-char-count-10">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties fo:hyphenation-push-char-count="10"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@fo:hyphenation-push-char-count)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@fo:hyphenation-push-char-count='10'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="hyphenation-remain-char-count-10">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties fo:hyphenation-remain-char-count="10"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@fo:hyphenation-remain-char-count)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@fo:hyphenation-remain-char-count='10'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="letter-spacing-normal">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties fo:letter-spacing="normal"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@fo:letter-spacing)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@fo:letter-spacing='normal'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="letter-spacing-1mm">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties fo:letter-spacing="1mm"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@fo:letter-spacing)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@fo:letter-spacing='1mm'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="letter-spacing--1mm">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties fo:letter-spacing="-1mm"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@fo:letter-spacing)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@fo:letter-spacing='-1mm'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="script">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties fo:script="arab" fo:language="ar"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@fo:script)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@fo:script='arab'"/>
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@fo:language)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@fo:language='ar'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="script-225">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties fo:script="225" fo:language="ar"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@fo:script)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@fo:script='225'"/>
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@fo:language)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@fo:language='ar'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="script-es">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties fo:script="es" fo:language="es"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@fo:script)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@fo:script='es'"/>
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@fo:language)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@fo:language='es'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="text-shadow">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties fo:text-shadow="3pt 3pt"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@fo:text-shadow)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@fo:text-shadow='3pt 3pt'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="text-transform-none">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties fo:text-transform="none"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@fo:text-transform)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@fo:text-transform='none'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="text-transform-lowercase">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties fo:text-transform="lowercase"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@fo:text-transform)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@fo:text-transform='lowercase'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="text-transform-uppercase">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties fo:text-transform="uppercase"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@fo:text-transform)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@fo:text-transform='uppercase'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="text-transform-capitalize">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties fo:text-transform="capitalize"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@fo:text-transform)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@fo:text-transform='capitalize'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="country-asian">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties s:country-asian="none"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:country-asian)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:country-asian='none'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="country-complex">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties s:country-complex="SA"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:country-complex)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:country-complex='SA'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="font-charset-x-symbol">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties s:font-charset="x-symbol"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:font-charset)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:font-charset='x-symbol'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="font-charset-utf8">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties s:font-charset="utf8"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:font-charset)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:font-charset='utf8'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="font-charset-utf-8">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties s:font-charset="utf-8"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:font-charset)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:font-charset='utf-8'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="font-charset-asian">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties s:font-charset-asian="x-symbol"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:font-charset-asian)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:font-charset-asian='x-symbol'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="font-charset-complex">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties s:font-charset-complex="x-symbol"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:font-charset-complex)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:font-charset-complex='x-symbol'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="font-family-asian">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties s:font-family-asian="Helvetica"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:font-family-asian)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:font-family-asian='Helvetica'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="font-family-complex">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties s:font-family-complex="Helvetica"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:font-family-complex)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:font-family-complex='Helvetica'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="font-family-generic">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties s:font-family-generic="modern"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:font-family-generic)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:font-family-generic='modern'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="font-family-generic-asian">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties s:font-family-generic-asian="modern"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:font-family-generic-asian)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:font-family-generic-asian='modern'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="font-family-generic-complex">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties s:font-family-generic-complex="modern"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:font-family-generic-complex)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:font-family-generic-complex='modern'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="font-name">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties s:font-name="Helvetica"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:font-name)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:font-name='Helvetica'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="font-name-asian">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties s:font-name-asian="Helvetica"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:font-name-asian)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:font-name-asian='Helvetica'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="font-name-complex">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties s:font-name-complex="Helvetica "/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:font-name-complex)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:font-name-complex='Helvetica '"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="font-pitch-fixed">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties s:font-pitch="fixed"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:font-pitch)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:font-pitch='fixed'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="font-pitch-variable">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties s:font-pitch="variable"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:font-pitch)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:font-pitch='variable'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="font-pitch-asian">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties s:font-pitch-asian="variable"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:font-pitch-asian)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:font-pitch-asian='variable'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="font-pitch-complex">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties s:font-pitch-complex="variable"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:font-pitch-complex)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:font-pitch-complex='variable'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="font-relief-none">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties s:font-relief="none"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:font-relief)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:font-relief='none'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="font-relief-embossed">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties s:font-relief="embossed"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:font-relief)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:font-relief='embossed'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="font-relief-engraved">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties s:font-relief="engraved"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:font-relief)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:font-relief='engraved'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="font-size-asian">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties s:font-size-asian="3pt"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:font-size-asian)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:font-size-asian='3pt'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="font-size-complex">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties s:font-size-complex="3pt"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:font-size-complex)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:font-size-complex='3pt'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="font-size-rel">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties s:font-size-rel="16pt"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:font-size-rel)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:font-size-rel='16pt'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="font-size-rel-asian">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties s:font-size-rel-asian="16pt"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:font-size-rel-asian)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:font-size-rel-asian='16pt'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="font-size-rel-complex">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties s:font-size-rel-complex="16pt"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:font-size-rel-complex)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:font-size-rel-complex='16pt'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="font-style-asian">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties s:font-style-asian="italic"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:font-style-asian)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:font-style-asian='italic'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="font-style-complex">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties s:font-style-complex="italic"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:font-style-complex)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:font-style-complex='italic'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="font-style-name">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties s:font-style-name="Bold" fo:font-family="Helvetica"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:font-style-name)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:font-style-name='Bold'"/>
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@fo:font-family)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@fo:font-family='Helvetica'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="font-style-name-asian">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties s:font-style-name-asian="Bold" fo:font-family="Helvetica"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:font-style-name-asian)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:font-style-name-asian='Bold'"/>
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@fo:font-family)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@fo:font-family='Helvetica'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="font-style-name-complex">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties s:font-style-name-complex="Bold" fo:font-family="Helvetica"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:font-style-name-complex)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:font-style-name-complex='Bold'"/>
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@fo:font-family)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@fo:font-family='Helvetica'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="font-weight-asian">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties s:font-weight-asian="bold"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:font-weight-asian)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:font-weight-asian='bold'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="font-weight-complex">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties s:font-weight-complex="bold"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:font-weight-complex)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:font-weight-complex='bold'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="language-asian">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties s:language-asian="zh"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:language-asian)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:language-asian='zh'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="language-complex">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties s:language-complex="ar" s:country-complex="SA"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:language-complex)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:language-complex='ar'"/>
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:country-complex)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:country-complex='SA'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="letter-kerning-false">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties s:letter-kerning="false"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:letter-kerning)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:letter-kerning='false'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="letter-kerning-true">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties s:letter-kerning="true"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:letter-kerning)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:letter-kerning='true'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="rfc-language-tag">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties s:rfc-language-tag="mn"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:rfc-language-tag)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:rfc-language-tag='mn'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="rfc-language-tag-asian">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties s:rfc-language-tag-asian="mn"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:rfc-language-tag-asian)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:rfc-language-tag-asian='mn'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="rfc-language-tag-complex">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties s:rfc-language-tag-complex="mn"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:rfc-language-tag-complex)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:rfc-language-tag-complex='mn'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="script-asian">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties s:script-asian="en"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:script-asian)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:script-asian='en'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="script-complex">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties s:script-complex="en"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:script-complex)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:script-complex='en'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="script-type-latin">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties s:script-type="latin"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:script-type)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:script-type='latin'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="script-type-asian">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties s:script-type="latin"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:script-type)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:script-type='latin'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="text-blinking">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties s:text-blinking="true"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-blinking)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-blinking='true'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="text-combine-none">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties s:text-combine="none"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-combine)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-combine='none'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="text-combine-letters">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties s:text-combine="letters"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-combine)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-combine='letters'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="text-combine-lines">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties s:text-combine="lines"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-combine)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-combine='lines'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="text-combine-end-char">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties s:text-combine-end-char="Z" s:text-combine="lines"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-combine-end-char)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-combine-end-char='Z'"/>
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-combine)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-combine='lines'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="text-combine-start-char">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties s:text-combine-start-char="A" s:text-combine-end-char="Z" s:text-combine="lines"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-combine-start-char)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-combine-start-char='A'"/>
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-combine-end-char)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-combine-end-char='Z'"/>
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-combine)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-combine='lines'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="text-emphasize">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties s:text-emphasize="disc below"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-emphasize)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-emphasize='disc below'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="text-line-through-color">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties s:text-line-through-color="#339999" s:text-line-through-style="solid"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-line-through-color)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-line-through-color='#339999'"/>
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-line-through-style)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-line-through-style='solid'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="text-line-through-color-font">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties s:text-line-through-color="font-color" s:text-line-through-style="solid"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-line-through-color)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-line-through-color='font-color'"/>
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-line-through-style)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-line-through-style='solid'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="text-line-through-mode-continuous">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties s:text-line-through-mode="continuous" s:text-line-through-style="solid"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-line-through-mode)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-line-through-mode='continuous'"/>
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-line-through-style)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-line-through-style='solid'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="text-line-through-mode-skip-white-space">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties s:text-line-through-mode="skip-white-space" s:text-line-through-style="solid"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-line-through-mode)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-line-through-mode='skip-white-space'"/>
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-line-through-style)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-line-through-style='solid'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="text-line-through-style-solid">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties s:text-line-through-style="solid"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-line-through-style)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-line-through-style='solid'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="text-line-through-style-wave">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties s:text-line-through-style="wave"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-line-through-style)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-line-through-style='wave'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="text-line-through-text">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties s:text-line-through-style="solid" s:text-line-through-text="X"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-line-through-style)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-line-through-style='solid'"/>
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-line-through-text)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-line-through-text='X'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="text-line-through-text-style">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties s:text-line-through-text-style="color" s:text-line-through-text="X"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-line-through-text-style)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-line-through-text-style='color'"/>
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-line-through-text)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-line-through-text='X'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="text-line-through-type-none">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties s:text-line-through-type="none"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-line-through-type)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-line-through-type='none'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="text-line-through-type-single">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties s:text-line-through-type="single"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-line-through-type)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-line-through-type='single'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="text-line-through-type-double">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties s:text-line-through-type="double"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-line-through-type)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-line-through-type='double'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="text-line-through-width-auto">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties s:text-line-through-width="auto" s:text-line-through-style="solid"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-line-through-width)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-line-through-width='auto'"/>
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-line-through-style)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-line-through-style='solid'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="text-line-through-width-bold">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties s:text-line-through-width="bold" s:text-line-through-style="solid"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-line-through-width)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-line-through-width='bold'"/>
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-line-through-style)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-line-through-style='solid'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="text-line-through-width-thin">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties s:text-line-through-width="thin" s:text-line-through-style="solid"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-line-through-width)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-line-through-width='thin'"/>
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-line-through-style)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-line-through-style='solid'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="text-outline-true">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties s:text-outline="true"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-outline)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-outline='true'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="text-outline-false">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties s:text-outline="false"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-outline)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-outline='false'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="text-overline-color">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties s:text-overline-color="#339999" s:text-overline-style="solid"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-overline-color)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-overline-color='#339999'"/>
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-overline-style)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-overline-style='solid'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="text-overline-mode">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties s:text-overline-mode="continuous" s:text-overline-style="solid"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-overline-mode)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-overline-mode='continuous'"/>
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-overline-style)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-overline-style='solid'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="text-overline-style">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties s:text-overline-style="solid"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-overline-style)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-overline-style='solid'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="text-overline-type">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties s:text-overline-type="single"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-overline-type)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-overline-type='single'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="text-overline-width">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties s:text-overline-width="1pt" s:text-overline-style="solid"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-overline-width)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-overline-width='1pt'"/>
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-overline-style)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-overline-style='solid'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="text-position-sub">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties s:text-position="sub"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-position)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-position='sub'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="text-position-sub-50">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties s:text-position="sub 50%"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-position)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-position='sub 50%'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="text-position-super">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties s:text-position="super"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-position)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-position='super'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="text-position-super-50">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties s:text-position="super 50%"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-position)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-position='super 50%'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="text-rotation-angle">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties s:text-rotation-angle="90"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-rotation-angle)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-rotation-angle='90'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="text-rotation-scale-fixed">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties s:text-rotation-scale="fixed" s:text-rotation-angle="90"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-rotation-scale)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-rotation-scale='fixed'"/>
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-rotation-angle)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-rotation-angle='90'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="text-rotation-scale-line-height">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties s:text-rotation-scale="line-height" s:text-rotation-angle="90"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-rotation-scale)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-rotation-scale='line-height'"/>
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-rotation-angle)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-rotation-angle='90'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="text-scale">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties s:text-scale="50%"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-scale)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-scale='50%'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="text-scale-wide">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties s:text-scale="200%"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-scale)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-scale='200%'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="text-underline-color-font-color">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties s:text-underline-color="font-color" s:text-underline-style="solid"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-underline-color)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-underline-color='font-color'"/>
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-underline-style)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-underline-style='solid'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="text-underline-color">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties s:text-underline-color="#339999" s:text-underline-style="solid"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-underline-color)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-underline-color='#339999'"/>
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-underline-style)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-underline-style='solid'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="text-underline-mode-continuous">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties s:text-underline-mode="continuous" s:text-underline-style="solid"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-underline-mode)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-underline-mode='continuous'"/>
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-underline-style)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-underline-style='solid'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="text-underline-mode-skip-white-space">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties s:text-underline-mode="skip-white-space" s:text-underline-style="solid"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-underline-mode)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-underline-mode='skip-white-space'"/>
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-underline-style)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-underline-style='solid'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="text-underline-style-none">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties s:text-underline-style="none"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-underline-style)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-underline-style='none'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="text-underline-style-dash">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties s:text-underline-style="dash"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-underline-style)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-underline-style='dash'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="text-underline-style-solid">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties s:text-underline-style="solid"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-underline-style)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-underline-style='solid'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="text-underline-style-wave">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties s:text-underline-style="wave"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-underline-style)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-underline-style='wave'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="text-underline-type-none">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties s:text-underline-type="none"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-underline-type)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-underline-type='none'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="text-underline-type-single">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties s:text-underline-type="single"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-underline-type)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-underline-type='single'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="text-underline-type-double">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties s:text-underline-type="double"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-underline-type)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-underline-type='double'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="text-underline-width">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties s:text-underline-width="1pt" s:text-underline-style="solid"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-underline-width)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-underline-width='1pt'"/>
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-underline-style)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:text-underline-style='solid'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="use-window-font-color-true">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties s:use-window-font-color="true"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:use-window-font-color)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:use-window-font-color='true'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="use-window-font-color-false">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties s:use-window-font-color="false"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:use-window-font-color)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@s:use-window-font-color='false'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="display-true">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties text:display="true"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@text:display)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@text:display='true'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="display-none">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties text:display="none"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@text:display)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@text:display='none'"/>
      </file>
    </output>
    <pdf/>
  </test>
  <test name="display-condition">
    <input type="odt1.2">
      <o:styles>
        <s:style s:name="color" s:family="text" s:display-name="Text">
          <s:text-properties fo:color="#339999"/>
        </s:style>
        <s:style s:name="style" s:family="paragraph" s:display-name="TestStyle">
          <s:text-properties text:display="condition" text:condition="none"/>
        </s:style>
      </o:styles>
      <o:text>
        <text:p text:style-name="style">hello world</text:p>
      </o:text>
    </input>
    <output types="odt1.0 odt1.1 odt1.2 odt1.2ext">
      <file path="styles.xml">
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@text:display)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@text:display='condition'"/>
        <xpath expr="boolean(//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@text:condition)"/>
        <xpath expr="//s:style[@s:display-name='TestStyle' or (not(@s:display-name) and @s:name='TestStyle')]/s:text-properties/@text:condition='none'"/>
      </file>
    </output>
    <pdf/>
  </test>
</documenttests>
